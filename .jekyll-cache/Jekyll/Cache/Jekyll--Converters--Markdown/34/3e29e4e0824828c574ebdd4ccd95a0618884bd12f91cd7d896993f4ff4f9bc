I"=<h2 id="tutorial">Tutorial</h2>
<p><a href="https://medium.com/data-science-school/practical-apache-spark-in-10-minutes-part-7-graphx-and-neo4j-b6b01cffa4fd" target="_blank">Practical Apache Spark in 10 minutes. Part 7 — GraphX and Neo4j</a></p>
<h2 id="practice">Practice</h2>
<ul>
  <li>Because I had not install Hadoop and Spark, I installed them following <a style="color:blue;" href="https://medium.com/data-science-school/practical-apache-spark-in-10-minutes-part-1-ubuntu-installation-f69bbb17ee9d" target="_blank">this</a>
    <ol>
      <li><strong>Install Java</strong><br />
<img src="/images/2019-09-30/java_version.png" /></li>
      <li><strong>Install Hadoop</strong><br />
Hadoop port:<br />
<a href="https://stackoverflow.com/questions/22855232/default-namenode-port-of-hdfs-is-50070-but-i-have-come-across-at-some-places-802" target="_blank">
<img src="/images/2019-09-30/hadoop_port.png" />
</a>
Result:
<img src="/images/2019-09-30/hadoop_test.png" /></li>
      <li><strong>Install Spark</strong><br />
<img src="/images/2019-09-30/spark_res.png" /><br /></li>
    </ol>
  </li>
</ul>

<p><a></a></p>
<ul>
  <li>Back to the tutortial:
    <ol>
      <li><strong>Prepare the data using pandas</strong>:
        <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span>
<span class="n">edges</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"copperfield_edges.csv"</span><span class="p">)</span>
<span class="n">nodes</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"copperfield_nodes.csv"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"nodes: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">nodes</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">"edges: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">edges</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
<span class="n">from_tab</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="n">edges</span><span class="p">,</span><span class="n">left_on</span><span class="o">=</span><span class="s">'name'</span><span class="p">,</span><span class="n">right_on</span><span class="o">=</span><span class="s">'from'</span><span class="p">)[[</span><span class="s">'part_of_speech'</span><span class="p">,</span><span class="s">'from'</span><span class="p">,</span><span class="s">'to'</span><span class="p">]]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"from_tab: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">from_tab</span><span class="p">)</span>
<span class="n">to_tab</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="n">edges</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">'name'</span><span class="p">,</span><span class="n">right_on</span><span class="o">=</span><span class="s">'to'</span><span class="p">)[[</span><span class="s">'part_of_speech'</span><span class="p">,</span><span class="s">'to'</span><span class="p">,</span><span class="s">'from'</span><span class="p">]]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"to_tab: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">to_tab</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
<span class="n">from_tab</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">{</span><span class="s">"part_of_speech"</span><span class="p">:</span> <span class="s">"pos_from"</span><span class="p">},</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">to_tab</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">{</span><span class="s">"part_of_speech"</span><span class="p">:</span> <span class="s">"pos_to"</span> <span class="p">},</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">tab</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">from_tab</span><span class="p">,</span> <span class="n">to_tab</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s">"to"</span><span class="p">,</span><span class="s">"from"</span><span class="p">])[[</span><span class="s">"pos_from"</span><span class="p">,</span><span class="s">"from"</span><span class="p">,</span><span class="s">"pos_to"</span><span class="p">,</span><span class="s">"to"</span><span class="p">]]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"tab table: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span>
</code></pre></div>        </div>
        <p><strong>Explaination:</strong></p>
        <ul>
          <li><strong>pandas.DataFrame</strong>: Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns). Arithmetic operations align on both row and column labels. Can be thought of as a dict-like container for Series objects. The primary pandas data structure.
   <a href="" target="_blank"><em>Document’site</em></a><br />
  <em>Example</em>:</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>
:ET